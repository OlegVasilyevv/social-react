{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profileinfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profileinfo/ProfileStatusHOOK.jsx","components/Profile/Profileinfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","css","posts","src","message","like","MyPosts","React","memo","postElem","postsData","map","post","key","userPosts","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","postsList","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","postsInput","Field","inputPost","name","component","Textarea","id","cols","rows","validate","requiredField","placeholder","ProfileStatusHOOK","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","profileDetails","userImg","photos","large","userInfo","infoList","userName","fullName","city","contacts","vk","education","webSite","Preloader","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","container","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.55897e93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputPost\":\"MyPosts_inputPost__3dWcE\",\"postsInput\":\"MyPosts_postsInput__32sMH\",\"postsList\":\"MyPosts_postsList__2hX4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__2UX9b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topImg\":\"ProfileInfo_topImg__hU27W\",\"profileDetails\":\"ProfileInfo_profileDetails__2_3s5\",\"userImg\":\"ProfileInfo_userImg__3r9Z5\",\"infoList\":\"ProfileInfo_infoList__2zblC\"};","import React from 'react';\r\nimport css from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return(\r\n    <li className={css.posts}><img src=\"https://www.wallpaperup.com/uploads/wallpapers/2013/02/15/40567/17242ee809e2edfd59a43daa244e3409-1000.jpg\" /><span>{ props.message }</span><p>Like {props.like}</p></li>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport css from './MyPosts.module.css';\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../Utils/Validators/Validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postElem = props.postsData\r\n        .map(post => <Post message={post.message} like={post.like} key={post.message}/>)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={css.userPosts}>\r\n            <h1>My Posts</h1>\r\n            <AddNewPostFormRedux onSubmit={addPost}/>\r\n            <ul className={css.postsList}>\r\n                {postElem}\r\n            </ul>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className={css.postsInput}>\r\n            <Field\r\n                className={css.inputPost}\r\n                name={\"newPostText\"}\r\n                component={Textarea} id=\"\" cols=\"30\" rows=\"10\"\r\n                validate={[requiredField, maxLength10]}\r\n                placeholder={'Write a post'}/>\r\n            <button>Send</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({\r\n    form: 'AddNewPostForm'\r\n})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusHOOK = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusHOOK;","import css from \"./ProfileInfo.module.css\";\r\nimport React from 'react';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusHOOK from './ProfileStatusHOOK'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={css.profileDetails}>\r\n                <div className={css.userImg}>\r\n                    <img src={props.profile.photos.large}/>\r\n                </div>\r\n                <div className={css.userInfo}>\r\n                    <ul className={css.infoList}>\r\n                        <h2 className={css.userName}>{props.profile.fullName}</h2>\r\n                        <ProfileStatusHOOK status={props.status} updateStatus={props.updateStatus}/>\r\n                        <li className={css.city}><span>VK </span><span>{props.profile.contacts.vk}</span></li>\r\n                        <li className={css.education}><span>Education: </span><span>High Ultra Perfomance</span></li>\r\n                        <li className={css.webSite}><span>Web-site: </span><span>https://google.com</span></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport css from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./Profileinfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={css.container}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}